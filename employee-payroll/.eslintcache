[{"C:\\Users\\joker\\Documents\\capgemini\\jrfsp\\assignments\\EmployeePayrollFrontend\\employee-payroll\\src\\index.js":"1","C:\\Users\\joker\\Documents\\capgemini\\jrfsp\\assignments\\EmployeePayrollFrontend\\employee-payroll\\src\\App.js":"2","C:\\Users\\joker\\Documents\\capgemini\\jrfsp\\assignments\\EmployeePayrollFrontend\\employee-payroll\\src\\reportWebVitals.js":"3","C:\\Users\\joker\\Documents\\capgemini\\jrfsp\\assignments\\EmployeePayrollFrontend\\employee-payroll\\src\\components\\payroll-form\\payroll-form.jsx":"4","C:\\Users\\joker\\Documents\\capgemini\\jrfsp\\assignments\\EmployeePayrollFrontend\\employee-payroll\\src\\services\\employee-service.js":"5","C:\\Users\\joker\\Documents\\capgemini\\jrfsp\\assignments\\EmployeePayrollFrontend\\employee-payroll\\src\\services\\axios-service.js":"6","C:\\Users\\joker\\Documents\\capgemini\\jrfsp\\assignments\\EmployeePayrollFrontend\\employee-payroll\\src\\config\\config.js":"7","C:\\Users\\joker\\Documents\\capgemini\\jrfsp\\assignments\\EmployeePayrollFrontend\\employee-payroll\\src\\components\\payroll-home\\payroll-home.jsx":"8","C:\\Users\\joker\\Documents\\capgemini\\jrfsp\\assignments\\EmployeePayrollFrontend\\employee-payroll\\src\\components\\payroll-home\\display\\display.jsx":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":650,"mtime":1608482628214,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":11568,"mtime":1608480561108,"results":"14","hashOfConfig":"11"},{"size":666,"mtime":1608550049996,"results":"15","hashOfConfig":"11"},{"size":720,"mtime":1608478199153,"results":"16","hashOfConfig":"11"},{"size":84,"mtime":1608551737358,"results":"17","hashOfConfig":"11"},{"size":1853,"mtime":1608481673381,"results":"18","hashOfConfig":"11"},{"size":2131,"mtime":1608551132474,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1rhdefp",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\joker\\Documents\\capgemini\\jrfsp\\assignments\\EmployeePayrollFrontend\\employee-payroll\\src\\index.js",[],["41","42"],"C:\\Users\\joker\\Documents\\capgemini\\jrfsp\\assignments\\EmployeePayrollFrontend\\employee-payroll\\src\\App.js",[],"C:\\Users\\joker\\Documents\\capgemini\\jrfsp\\assignments\\EmployeePayrollFrontend\\employee-payroll\\src\\reportWebVitals.js",[],"C:\\Users\\joker\\Documents\\capgemini\\jrfsp\\assignments\\EmployeePayrollFrontend\\employee-payroll\\src\\components\\payroll-form\\payroll-form.jsx",["43","44","45","46","47","48","49","50","51","52","53","54"],"import React, { useState, useEffect } from 'react';\r\nimport profile1 from '../../assets/profile-images/Ellipse -3.png';\r\nimport profile2 from '../../assets/profile-images/Ellipse 1.png';\r\nimport profile3 from '../../assets/profile-images/Ellipse -8.png';\r\nimport profile4 from '../../assets/profile-images/Ellipse -7.png';\r\nimport './payroll-form.css';\r\nimport logo from '../../assets/images/logo.png';\r\nimport { useParams, Link, withRouter } from 'react-router-dom';\r\nimport EmployeeService from \"../../services/employee-service\";\r\n\r\nconst PayrollForm = (props) => {\r\n  let initialValue = {\r\n    name: '',\r\n    profileArrays: [\r\n      { url: '../../assets/profile-images/Ellipse -3.png' },\r\n      { url: '../../assets/profile-images/Ellipse 1.png' },\r\n      { url: '../../assets/profile-images/Ellipse -8.png' },\r\n      { url: '../../assets/profile-images/Ellipse -7.png' },\r\n    ],\r\n    allDepartment: [\r\n      'HR', 'Sales', 'Finance', 'Engineer', 'Others'\r\n    ],\r\n    departmenValue: [],\r\n    gender: '',\r\n    salary: '',\r\n    day: '1',\r\n    month: 'Jan',\r\n    year: '2020',\r\n    startDate: '',\r\n    notes: '',\r\n    id: '',\r\n    profileUrl: '',\r\n    isUpdate: false,\r\n    error: {\r\n      department: '',\r\n      name: '',\r\n      gender: '',\r\n      salary: '',\r\n      profileUrl: '',\r\n      startDate: ''\r\n    }\r\n  }\r\n  const [formValue, setForm] = useState(initialValue);\r\n  let employeeService = new EmployeeService();\r\n\r\n  const changeValue = (event) => {\r\n    setForm({ ...formValue, [event.target.name]: event.target.value });\r\n  }\r\n\r\n  const onCheckChange = (name) => {\r\n    let index = formValue.departmenValue.indexOf(name);\r\n    let checkArray = [...formValue.departmenValue];\r\n    if (index > -1)\r\n      checkArray.splice(index, 1);\r\n    else\r\n      checkArray.push(name);\r\n    setForm({ ...formValue, departmenValue: checkArray });\r\n  }\r\n\r\n  const getChecked = (name) => {\r\n    return formValue.departmenValue && formValue.departmenValue.includes(name);\r\n  }\r\n\r\n  const validData = async () => {\r\n    let isError = false;\r\n    let error = {\r\n      department: '',\r\n      name: '',\r\n      gender: '',\r\n      salary: '',\r\n      profileUrl: '',\r\n      startDate: ''\r\n    }\r\n    if (formValue.name.length < 1) {\r\n      error.name = 'name is required field'\r\n      isError = true;\r\n    }\r\n    if (formValue.gender.length < 1) {\r\n      error.gender = 'gender is required field'\r\n      isError = true;\r\n    }\r\n    if (formValue.salary.length < 1) {\r\n      error.salary = 'salary is required field'\r\n      isError = true;\r\n    }\r\n    if (formValue.profileUrl.length < 1) {\r\n      error.profileUrl = 'profileUrl is required field'\r\n      isError = true;\r\n    }\r\n    if (formValue.departmentValue.length < 1) {\r\n      error.departmentValue = 'departmentValue is required field'\r\n      isError = true;\r\n    }\r\n    await setForm({ ...formValue, error: error })\r\n    return isError;\r\n  }\r\n\r\n  const save = async (event) => {\r\n    event.preventDefault();\r\n    let object = {\r\n      name: formValue.name,\r\n      department: formValue.departmentValue,\r\n      gender: formValue.gender,\r\n      salary: formValue.salary,\r\n      startDate: `${formValue.day} ${formValue.month} ${formValue.year}`,\r\n      notes: formValue.notes,\r\n      id: formValue.id,\r\n      profileUrl: formValue.profileUrl\r\n    }\r\n    console.log(object);\r\n    employeeService.addEmployee(object).then(data => {\r\n      console.log(\"data added\");\r\n      props.history.push('');\r\n    }).catch(err => {\r\n      console.log(\"err while add\");\r\n    })\r\n  }\r\n\r\n  const reset = () => {\r\n    setForm({ ...initialValue, id: formValue.id, isUpdate: formValue.isUpdate });\r\n    console.log(formValue);\r\n  }\r\n\r\n  return (\r\n    <div className=\"payroll-main\">\r\n      <header class=\"header-content header\">\r\n        <div class=\"logo-content\">\r\n          <img src=\"../assets/images/logo.png\" alt=\"\" />\r\n          <div>\r\n            <span class=\"emp-text\">EMPLOYEE</span>\r\n            <span class=\"emp-text emp-payroll\">PAYROLL</span>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <div className=\"form-content\">\r\n        <form action=\"#\" className=\"form\" onSubmit={save}>\r\n          <div className=\"form-head\">Employee Payroll form</div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"name\" className=\"label text\">Name</label>\r\n            <input type=\"text\" className=\"input\" id=\"name\" name=\"name\" value={formValue.name} onChange={changeValue} placeholder=\"Your name..\" />\r\n          </div>\r\n          <div className=\"error\">{formValue.error.name}</div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"profileUrl\" className=\"label text\">Profile image</label>\r\n            <div className=\"profile-radio-button\">\r\n              <label>\r\n                <input type=\"radio\" checked={formValue.profileUrl == '../../assets/profile-images/Ellipse -3.png'}\r\n                  name='profileUrl' value=\"../../assets/profile-images/Ellipse -3.png\" onChange={changeValue} />\r\n                <img src={profile1} className=\"profile\" />\r\n              </label>\r\n              <label>\r\n                <input type=\"radio\" checked={formValue.profileUrl == '../../assets/profile-images/Ellipse 1.png'}\r\n                  name='profileUrl' value=\"../../assets/profile-images/Ellipse 1.png\" onChange={changeValue} />\r\n                <img src={profile2} className=\"profile\" />\r\n              </label>\r\n              <label>\r\n                <input type=\"radio\" checked={formValue.profileUrl == '../../assets/profile-images/Ellipse -8.png'}\r\n                  name='profileUrl' value=\"../../assets/profile-images/Ellipse -8.png\" onChange={changeValue} />\r\n                <img src={profile3} className=\"profile\" />\r\n              </label>\r\n              <label>\r\n                <input type=\"radio\" checked={formValue.profileUrl == '../../assets/profile-images/Ellipse -7.png'}\r\n                  name='profileUrl' value=\"../../assets/profile-images/Ellipse -7.png\" onChange={changeValue} />\r\n                <img src={profile4} className=\"profile\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"error\">{formValue.error.profileUrl}</div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"gender\" className=\"label text\">Gender</label>\r\n            <div>\r\n              <input type=\"radio\" id=\"male\" onChange={changeValue} name=\"gender\" value=\"male\" />\r\n              <label htmlFor=\"male\" className=\"text\">Male</label>\r\n              <input type=\"radio\" id=\"female\" onChange={changeValue} name=\"gender\" value=\"female\" />\r\n              <label htmlFor=\"female\" className=\"text\">Female</label>\r\n            </div>\r\n          </div>\r\n          <div className=\"error\">{formValue.error.gender}</div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"department\" className=\"label text\">Department</label>\r\n            <div>\r\n              {formValue.allDepartment.map(item => (\r\n                <span key={item}>\r\n                  <input\r\n                    className=\"checkbox\"\r\n                    type=\"checkbox\"\r\n                    onChange={() => onCheckChange(item)}\r\n                    name={item}\r\n                    defaultChecked={() => getChecked(item)}\r\n                    value={item}\r\n                  />\r\n                  <label className=\"text\" htmlFor={item}>\r\n                    {item}\r\n                  </label>\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"error\">{formValue.error.department}</div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"salary\" className=\"label text\">Salary</label>\r\n            <input type=\"range\" min=\"300000\" max=\"500000\"\r\n              className=\"input\" onChange={changeValue} id=\"salary\"\r\n              value={formValue.salary} name=\"salary\" placeholder=\"Salary\" />\r\n            <output class=\"salary-output\" for=\"salary\">{formValue.salary}</output>\r\n          </div>\r\n          <div className=\"error\">{formValue.error.salary}</div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"startDate\" className=\"label text\">Start Date</label>\r\n            <select name=\"day\" id=\"day\" onChange={changeValue}>\r\n              <option value=\"1\">1</option>\r\n              <option value=\"2\">2</option>\r\n              <option value=\"3\">3</option>\r\n              <option value=\"4\">4</option>\r\n              <option value=\"5\">5</option>\r\n              <option value=\"6\">6</option>\r\n              <option value=\"8\">7</option>\r\n              <option value=\"9\">9</option>\r\n              <option value=\"10\">10</option>\r\n              <option value=\"11\">11</option>\r\n              <option value=\"12\">12</option>\r\n              <option value=\"13\">13</option>\r\n              <option value=\"14\">14</option>\r\n              <option value=\"15\">15</option>\r\n              <option value=\"16\">16</option>\r\n              <option value=\"17\">17</option>\r\n              <option value=\"18\">18</option>\r\n              <option value=\"19\">19</option>\r\n              <option value=\"20\">20</option>\r\n              <option value=\"21\">21</option>\r\n              <option value=\"22\">22</option>\r\n              <option value=\"23\">23</option>\r\n              <option value=\"24\">24</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"26\">26</option>\r\n              <option value=\"27\">27</option>\r\n              <option value=\"28\">28</option>\r\n              <option value=\"29\">29</option>\r\n              <option value=\"30\">30</option>\r\n              <option value=\"31\">31</option>\r\n            </select>\r\n            <select name=\"month\" id=\"month\" onChange={changeValue}>\r\n              <option value=\"Jan\">January</option>\r\n              <option value=\"Feb\">February</option>\r\n              <option value=\"March\">March</option>\r\n              <option value=\"April\">April</option>\r\n              <option value=\"May\">May</option>\r\n              <option value=\"June\">June</option>\r\n              <option value=\"July\">July</option>\r\n              <option value=\"Aug\">August</option>\r\n              <option value=\"Sept\">September</option>\r\n              <option value=\"Oct\">October</option>\r\n              <option value=\"Nov\">November</option>\r\n              <option value=\"Dec\">December</option>\r\n            </select>\r\n            <select name=\"year\" id=\"year\" onChange={changeValue}>\r\n              <option value=\"2020\">2020</option>\r\n              <option value=\"2019\">2019</option>\r\n              <option value=\"2018\">2018</option>\r\n              <option value=\"2017\">2017</option>\r\n              <option value=\"2016\">2016</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"error\">{formValue.error.startDate}</div>\r\n          <div className=\"row\">\r\n            <label htmlFor=\"notes\" className=\"label text\">Notes</label>\r\n            <textarea name=\"notes\" id=\"notes\"\r\n              onChange={changeValue} className=\"input\"\r\n              value={formValue.notes} placeholder=\"\" style={{ height: '100%' }}></textarea>\r\n          </div>\r\n          <div className=\"buttonParent\">\r\n            <Link to=\"/#\" className=\"resetButton button cancelButton\">Cancel</Link>\r\n            <div className=\"submit-reset\">\r\n              <button type=\"submit\" className=\"button submitButton\" id=\"submitButton\">{formValue.isUpdate ? 'Update' : 'Submit'}</button>\r\n              <button type=\"button\" onClick={reset} className=\"resetButton button\">Reset</button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(PayrollForm);","C:\\Users\\joker\\Documents\\capgemini\\jrfsp\\assignments\\EmployeePayrollFrontend\\employee-payroll\\src\\services\\employee-service.js",[],"C:\\Users\\joker\\Documents\\capgemini\\jrfsp\\assignments\\EmployeePayrollFrontend\\employee-payroll\\src\\services\\axios-service.js",[],"C:\\Users\\joker\\Documents\\capgemini\\jrfsp\\assignments\\EmployeePayrollFrontend\\employee-payroll\\src\\config\\config.js",[],"C:\\Users\\joker\\Documents\\capgemini\\jrfsp\\assignments\\EmployeePayrollFrontend\\employee-payroll\\src\\components\\payroll-home\\payroll-home.jsx",["55"],"import React from \"react\";\r\nimport Display from \"./display/display\";\r\nimport EmployeeService from \"../../services/employee-service\";\r\nimport addUser from \"../../assets/icons/add-24px.svg\"\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../../assets/images/logo.png\";\r\n\r\nclass PayrollHome extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchExpand: false,\r\n      employeeArray: [],\r\n    };\r\n    this.employeeService = new EmployeeService();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllEmployee();\r\n  }\r\n\r\n  getAllEmployee = () => {\r\n    this.employeeService\r\n      .getAllEmployees()\r\n      .then(data => {\r\n        console.log(\"data after get \", data.data);\r\n        this.setState({\r\n          employeeArray: data.data,\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(\"err after \", err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"home\">\r\n        <header className=\"header-content header\">\r\n          <div className=\"logo-content\">\r\n            <img src={logo} />\r\n            <div>\r\n              <span className=\"emp-text\">EMPLOYEE</span> <br />\r\n              <span className=\"emp-text emp-payroll\">PAYROLL</span>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <div className=\"main-content\">\r\n          <div className=\"header-content\">\r\n            <div className=\"emp-details-text\">\r\n              Employee Details <div class=\"emp-count\"> 10</div>\r\n            </div>\r\n            <Link to=\"form\" className=\"add-button\">\r\n              <img src={addUser} alt=\"\" /> Add User\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"table-main\">\r\n            <Display employeeArray={this.state.employeeArray} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PayrollHome;\r\n","C:\\Users\\joker\\Documents\\capgemini\\jrfsp\\assignments\\EmployeePayrollFrontend\\employee-payroll\\src\\components\\payroll-home\\display\\display.jsx",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":1,"column":27,"nodeType":"62","messageId":"63","endLine":1,"endColumn":36},{"ruleId":"60","severity":1,"message":"64","line":7,"column":8,"nodeType":"62","messageId":"63","endLine":7,"endColumn":12},{"ruleId":"60","severity":1,"message":"65","line":8,"column":10,"nodeType":"62","messageId":"63","endLine":8,"endColumn":19},{"ruleId":"60","severity":1,"message":"66","line":64,"column":9,"nodeType":"62","messageId":"63","endLine":64,"endColumn":18},{"ruleId":"67","severity":1,"message":"68","line":147,"column":67,"nodeType":"69","messageId":"70","endLine":147,"endColumn":69},{"ruleId":"71","severity":1,"message":"72","line":149,"column":17,"nodeType":"73","endLine":149,"endColumn":59},{"ruleId":"67","severity":1,"message":"68","line":152,"column":67,"nodeType":"69","messageId":"70","endLine":152,"endColumn":69},{"ruleId":"71","severity":1,"message":"72","line":154,"column":17,"nodeType":"73","endLine":154,"endColumn":59},{"ruleId":"67","severity":1,"message":"68","line":157,"column":67,"nodeType":"69","messageId":"70","endLine":157,"endColumn":69},{"ruleId":"71","severity":1,"message":"72","line":159,"column":17,"nodeType":"73","endLine":159,"endColumn":59},{"ruleId":"67","severity":1,"message":"68","line":162,"column":67,"nodeType":"69","messageId":"70","endLine":162,"endColumn":69},{"ruleId":"71","severity":1,"message":"72","line":164,"column":17,"nodeType":"73","endLine":164,"endColumn":59},{"ruleId":"71","severity":1,"message":"72","line":41,"column":13,"nodeType":"73","endLine":41,"endColumn":31},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'useParams' is defined but never used.","'validData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]